// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.12.3                         -- www.JsonSchema42.org
//
/**
* @description Core schema meta-schema
* @see {@link http://json-schema.org/draft-04/schema#}
*/
export type SchemaDocument = (
{
["id"]?: Id,
["$schema"]?: Schema,
["title"]?: Title,
["description"]?: Description,
["default"]?: Default,
["multipleOf"]?: MultipleOf,
["maximum"]?: Maximum,
["exclusiveMaximum"]?: ExclusiveMaximum,
["minimum"]?: Minimum,
["exclusiveMinimum"]?: ExclusiveMinimum,
["maxLength"]?: MaxLength,
["minLength"]?: MinLength,
["pattern"]?: Pattern,
["additionalItems"]?: AdditionalItems,
["items"]?: PropertiesItems,
["maxItems"]?: MaxItems,
["minItems"]?: MinItems,
["uniqueItems"]?: UniqueItems,
["maxProperties"]?: MaxProperties,
["minProperties"]?: MinProperties,
["required"]?: Required,
["additionalProperties"]?: PropertiesAdditionalProperties,
["definitions"]?: Definitions,
["properties"]?: Properties,
["patternProperties"]?: PatternProperties,
["dependencies"]?: Dependencies,
["enum"]?: Enum,
["type"]?: Type,
["format"]?: Format,
["allOf"]?: AllOf,
["anyOf"]?: AnyOf,
["oneOf"]?: OneOf,
["not"]?: Not,
[
name: string
]: any
}
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/schemaArray}
*/
export type SchemaArray = (
[
...(SchemaArrayItems)[]
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveInteger}
*/
export type PositiveInteger = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0}
*/
export type PositiveIntegerDefault0 = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/simpleTypes}
*/
export type SimpleTypes = ("array" |
"boolean" |
"integer" |
"null" |
"number" |
"object" |
"string");
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/stringArray}
*/
export type StringArray = (
[
...(StringArrayItems)[]
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/id}
*/
export type Id = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/$schema}
*/
export type Schema = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/title}
*/
export type Title = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/description}
*/
export type Description = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/default}
*/
export type Default = (unknown);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/multipleOf}
*/
export type MultipleOf = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/maximum}
*/
export type Maximum = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum}
*/
export type ExclusiveMaximum = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/minimum}
*/
export type Minimum = (number);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum}
*/
export type ExclusiveMinimum = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/maxLength}
*/
export type MaxLength = (PositiveInteger);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/minLength}
*/
export type MinLength = (PositiveIntegerDefault0);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/pattern}
*/
export type Pattern = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalItems}
*/
export type AdditionalItems = (
AdditionalItems0
|
AdditionalItems1
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/items}
*/
export type PropertiesItems = (
Items0
|
Items1
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/maxItems}
*/
export type MaxItems = (PositiveInteger);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/minItems}
*/
export type MinItems = (PositiveIntegerDefault0);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/uniqueItems}
*/
export type UniqueItems = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/maxProperties}
*/
export type MaxProperties = (PositiveInteger);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/minProperties}
*/
export type MinProperties = (PositiveIntegerDefault0);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/required}
*/
export type Required = (StringArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalProperties}
*/
export type PropertiesAdditionalProperties = (
AdditionalProperties0
|
AdditionalProperties1
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/definitions}
*/
export type Definitions = (
{
[
name: string
]: DefinitionsAdditionalProperties
}
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/properties}
*/
export type Properties = (
{
[
name: string
]: PropertiesPropertiesAdditionalProperties
}
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/patternProperties}
*/
export type PatternProperties = (
{
[
name: string
]: PatternPropertiesAdditionalProperties
}
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/dependencies}
*/
export type Dependencies = (
{
[
name: string
]: DependenciesAdditionalProperties
}
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/enum}
*/
export type Enum = (
[
...any
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type}
*/
export type Type = (
Type0
|
Type1
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/format}
*/
export type Format = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/allOf}
*/
export type AllOf = (SchemaArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/anyOf}
*/
export type AnyOf = (SchemaArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/oneOf}
*/
export type OneOf = (SchemaArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/not}
*/
export type Not = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/schemaArray/items}
*/
export type SchemaArrayItems = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/0}
*/
export type PositiveIntegerDefault00 = (PositiveInteger);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/1}
*/
export type PositiveIntegerDefault01 = (unknown);
/**
* @see {@link http://json-schema.org/draft-04/schema#/definitions/stringArray/items}
*/
export type StringArrayItems = (string);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalItems/anyOf/0}
*/
export type AdditionalItems0 = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalItems/anyOf/1}
*/
export type AdditionalItems1 = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/items/anyOf/0}
*/
export type Items0 = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/items/anyOf/1}
*/
export type Items1 = (SchemaArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalProperties/anyOf/0}
*/
export type AdditionalProperties0 = (boolean);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/additionalProperties/anyOf/1}
*/
export type AdditionalProperties1 = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/definitions/additionalProperties}
*/
export type DefinitionsAdditionalProperties = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/properties/additionalProperties}
*/
export type PropertiesPropertiesAdditionalProperties = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/patternProperties/additionalProperties}
*/
export type PatternPropertiesAdditionalProperties = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties}
*/
export type DependenciesAdditionalProperties = (
Dependencies0
|
Dependencies1
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/0}
*/
export type Type0 = (SimpleTypes);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/1}
*/
export type Type1 = (
[
...(TypeItems)[]
]
);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties/anyOf/0}
*/
export type Dependencies0 = (SchemaDocument);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties/anyOf/1}
*/
export type Dependencies1 = (StringArray);
/**
* @see {@link http://json-schema.org/draft-04/schema#/properties/type/anyOf/1/items}
*/
export type TypeItems = (SimpleTypes);
