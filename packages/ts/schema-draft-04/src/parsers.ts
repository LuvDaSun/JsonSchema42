// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.9.6                          -- www.JsonSchema42.org
// http://json-schema.org/draft-04/schema#
export function parseSchemaDocument(value: unknown): unknown {
return (typeof value === "object" && value !== null && !Array.isArray(value)) ?
{
"id": parseId(value["id" as keyof typeof value]),
"$schema": parseSchema(value["$schema" as keyof typeof value]),
"title": parseTitle(value["title" as keyof typeof value]),
"description": parseDescription(value["description" as keyof typeof value]),
"default": parseDefault(value["default" as keyof typeof value]),
"multipleOf": parseMultipleOf(value["multipleOf" as keyof typeof value]),
"maximum": parseMaximum(value["maximum" as keyof typeof value]),
"exclusiveMaximum": parseExclusiveMaximum(value["exclusiveMaximum" as keyof typeof value]),
"minimum": parseMinimum(value["minimum" as keyof typeof value]),
"exclusiveMinimum": parseExclusiveMinimum(value["exclusiveMinimum" as keyof typeof value]),
"maxLength": parseMaxLength(value["maxLength" as keyof typeof value]),
"minLength": parseMinLength(value["minLength" as keyof typeof value]),
"pattern": parsePattern(value["pattern" as keyof typeof value]),
"additionalItems": parseAdditionalItems(value["additionalItems" as keyof typeof value]),
"items": parsePropertiesItems(value["items" as keyof typeof value]),
"maxItems": parseMaxItems(value["maxItems" as keyof typeof value]),
"minItems": parseMinItems(value["minItems" as keyof typeof value]),
"uniqueItems": parseUniqueItems(value["uniqueItems" as keyof typeof value]),
"maxProperties": parseMaxProperties(value["maxProperties" as keyof typeof value]),
"minProperties": parseMinProperties(value["minProperties" as keyof typeof value]),
"required": parseRequired(value["required" as keyof typeof value]),
"additionalProperties": parsePropertiesAdditionalProperties(value["additionalProperties" as keyof typeof value]),
"definitions": parseDefinitions(value["definitions" as keyof typeof value]),
"properties": parseProperties(value["properties" as keyof typeof value]),
"patternProperties": parsePatternProperties(value["patternProperties" as keyof typeof value]),
"dependencies": parseDependencies(value["dependencies" as keyof typeof value]),
"enum": parseEnum(value["enum" as keyof typeof value]),
"type": parseType(value["type" as keyof typeof value]),
"format": parseFormat(value["format" as keyof typeof value]),
"allOf": parseAllOf(value["allOf" as keyof typeof value]),
"anyOf": parseAnyOf(value["anyOf" as keyof typeof value]),
"oneOf": parseOneOf(value["oneOf" as keyof typeof value]),
"not": parseNot(value["not" as keyof typeof value]),
} :
undefined;
}
// http://json-schema.org/draft-04/schema#/definitions/schemaArray
export function parseSchemaArray(value: unknown): unknown {
return Array.isArray(value) ?
value.map(value => parseSchemaArrayItems(value)) :
undefined;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveInteger
export function parsePositiveInteger(value: unknown): unknown {
switch(typeof value) {
case "string":
return Number(value);
case "number":
return value;
case "boolean":
return value ? 1 : 0;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0
export function parsePositiveIntegerDefault0(value: unknown): unknown {
switch(typeof value) {
case "string":
return Number(value);
case "number":
return value;
case "boolean":
return value ? 1 : 0;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/definitions/simpleTypes
export function parseSimpleTypes(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/definitions/stringArray
export function parseStringArray(value: unknown): unknown {
return Array.isArray(value) ?
value.map(value => parseStringArrayItems(value)) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/id
export function parseId(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/$schema
export function parseSchema(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/title
export function parseTitle(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/description
export function parseDescription(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/default
export function parseDefault(value: unknown): unknown {
return value;
}
// http://json-schema.org/draft-04/schema#/properties/multipleOf
export function parseMultipleOf(value: unknown): unknown {
switch(typeof value) {
case "string":
return Number(value);
case "number":
return value;
case "boolean":
return value ? 1 : 0;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/maximum
export function parseMaximum(value: unknown): unknown {
switch(typeof value) {
case "string":
return Number(value);
case "number":
return value;
case "boolean":
return value ? 1 : 0;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/exclusiveMaximum
export function parseExclusiveMaximum(value: unknown): unknown {
if(value == null) {
return false;
}
switch(typeof value) {
case "string":
switch(value.trim()) {
case "":
case "no":
case "off":
case "false":
case "0":
return false;
default:
return true;
}
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/minimum
export function parseMinimum(value: unknown): unknown {
switch(typeof value) {
case "string":
return Number(value);
case "number":
return value;
case "boolean":
return value ? 1 : 0;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/exclusiveMinimum
export function parseExclusiveMinimum(value: unknown): unknown {
if(value == null) {
return false;
}
switch(typeof value) {
case "string":
switch(value.trim()) {
case "":
case "no":
case "off":
case "false":
case "0":
return false;
default:
return true;
}
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/maxLength
export function parseMaxLength(value: unknown): unknown {
return parsePositiveInteger(value);
}
// http://json-schema.org/draft-04/schema#/properties/minLength
export function parseMinLength(value: unknown): unknown {
return parsePositiveIntegerDefault0(value);
}
// http://json-schema.org/draft-04/schema#/properties/pattern
export function parsePattern(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/additionalItems
export function parseAdditionalItems(value: unknown): unknown {
return parseAdditionalItems0(value) ?? parseAdditionalItems1(value);
}
// http://json-schema.org/draft-04/schema#/properties/items
export function parsePropertiesItems(value: unknown): unknown {
return parseItems0(value) ?? parseItems1(value);
}
// http://json-schema.org/draft-04/schema#/properties/maxItems
export function parseMaxItems(value: unknown): unknown {
return parsePositiveInteger(value);
}
// http://json-schema.org/draft-04/schema#/properties/minItems
export function parseMinItems(value: unknown): unknown {
return parsePositiveIntegerDefault0(value);
}
// http://json-schema.org/draft-04/schema#/properties/uniqueItems
export function parseUniqueItems(value: unknown): unknown {
if(value == null) {
return false;
}
switch(typeof value) {
case "string":
switch(value.trim()) {
case "":
case "no":
case "off":
case "false":
case "0":
return false;
default:
return true;
}
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/maxProperties
export function parseMaxProperties(value: unknown): unknown {
return parsePositiveInteger(value);
}
// http://json-schema.org/draft-04/schema#/properties/minProperties
export function parseMinProperties(value: unknown): unknown {
return parsePositiveIntegerDefault0(value);
}
// http://json-schema.org/draft-04/schema#/properties/required
export function parseRequired(value: unknown): unknown {
return parseStringArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/additionalProperties
export function parsePropertiesAdditionalProperties(value: unknown): unknown {
return parseAdditionalProperties0(value) ?? parseAdditionalProperties1(value);
}
// http://json-schema.org/draft-04/schema#/properties/definitions
export function parseDefinitions(value: unknown): unknown {
return (typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => [
((value: unknown) => {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(name),
parseDefinitionsAdditionalProperties(value),
])
) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/properties
export function parseProperties(value: unknown): unknown {
return (typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => [
((value: unknown) => {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(name),
parsePropertiesPropertiesAdditionalProperties(value),
])
) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/patternProperties
export function parsePatternProperties(value: unknown): unknown {
return (typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => [
((value: unknown) => {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(name),
parsePatternPropertiesAdditionalProperties(value),
])
) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/dependencies
export function parseDependencies(value: unknown): unknown {
return (typeof value === "object" && value !== null && !Array.isArray(value)) ?
Object.fromEntries(
Object.entries(value).map(([name, value]) => [
((value: unknown) => {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
})(name),
parseDependenciesAdditionalProperties(value),
])
) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/enum
export function parseEnum(value: unknown): unknown {
return Array.isArray(value) ?
value.map(value => ((value: unknown) => {
return value;
})(value)) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/type
export function parseType(value: unknown): unknown {
return parseType0(value) ?? parseType1(value);
}
// http://json-schema.org/draft-04/schema#/properties/format
export function parseFormat(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/allOf
export function parseAllOf(value: unknown): unknown {
return parseSchemaArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/anyOf
export function parseAnyOf(value: unknown): unknown {
return parseSchemaArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/oneOf
export function parseOneOf(value: unknown): unknown {
return parseSchemaArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/not
export function parseNot(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/definitions/schemaArray/items
export function parseSchemaArrayItems(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/0
export function parsePositiveIntegerDefault00(value: unknown): unknown {
return parsePositiveInteger(value);
}
// http://json-schema.org/draft-04/schema#/definitions/positiveIntegerDefault0/allOf/1
export function parsePositiveIntegerDefault01(value: unknown): unknown {
return value;
}
// http://json-schema.org/draft-04/schema#/definitions/stringArray/items
export function parseStringArrayItems(value: unknown): unknown {
switch(typeof value) {
case "string":
return value;
case "number":
case "boolean":
return String(value);
default:
return undefined;
}
}
// http://json-schema.org/draft-04/schema#/properties/additionalItems/anyOf/0
export function parseAdditionalItems0(value: unknown): unknown {
if(value == null) {
return false;
}
switch(typeof value) {
case "string":
switch(value.trim()) {
case "":
case "no":
case "off":
case "false":
case "0":
return false;
default:
return true;
}
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/additionalItems/anyOf/1
export function parseAdditionalItems1(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/items/anyOf/0
export function parseItems0(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/items/anyOf/1
export function parseItems1(value: unknown): unknown {
return parseSchemaArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/additionalProperties/anyOf/0
export function parseAdditionalProperties0(value: unknown): unknown {
if(value == null) {
return false;
}
switch(typeof value) {
case "string":
switch(value.trim()) {
case "":
case "no":
case "off":
case "false":
case "0":
return false;
default:
return true;
}
case "number":
return Boolean(value);
case "boolean":
return value;
}
return undefined;
}
// http://json-schema.org/draft-04/schema#/properties/additionalProperties/anyOf/1
export function parseAdditionalProperties1(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/definitions/additionalProperties
export function parseDefinitionsAdditionalProperties(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/properties/additionalProperties
export function parsePropertiesPropertiesAdditionalProperties(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/patternProperties/additionalProperties
export function parsePatternPropertiesAdditionalProperties(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties
export function parseDependenciesAdditionalProperties(value: unknown): unknown {
return parseDependencies0(value) ?? parseDependencies1(value);
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/0
export function parseType0(value: unknown): unknown {
return parseSimpleTypes(value);
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1
export function parseType1(value: unknown): unknown {
return Array.isArray(value) ?
value.map(value => parseTypeItems(value)) :
undefined;
}
// http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties/anyOf/0
export function parseDependencies0(value: unknown): unknown {
return parseSchemaDocument(value);
}
// http://json-schema.org/draft-04/schema#/properties/dependencies/additionalProperties/anyOf/1
export function parseDependencies1(value: unknown): unknown {
return parseStringArray(value);
}
// http://json-schema.org/draft-04/schema#/properties/type/anyOf/1/items
export function parseTypeItems(value: unknown): unknown {
return parseSimpleTypes(value);
}
