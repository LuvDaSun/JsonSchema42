// @generated by
//     __             _____     _                 ___ ___
//  _ |  |___ ___ ___|   __|___| |_ ___ _____  __| | |_  |
// | |_| |_ -| . |   |__   |  _|   | -_|     ||. |_  |  _|
// |_____|___|___|_|_|_____|___|_|_|___|_|_|_|___| |_|___|
// v0.10.0                         -- www.JsonSchema42.org
//
import * as types from "./types.js";
/**
* @summary JsonSchema42 intermediate schema
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json}
*/
export function isSchemaDocument(value: unknown): value is types.SchemaDocument {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
("$schema" in value) &&
(value["$schema"] !== undefined) &&
("schemas" in value) &&
(value["schemas"] !== undefined) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
switch(propertyName) {
case "$schema":
if(!isSchema(propertyValue)) {
return false;
}
break;
case "schemas":
if(!isSchemas(propertyValue)) {
return false;
}
break;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node}
*/
export function isNode(value: unknown): value is types.Node {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
switch(propertyName) {
case "title":
if(!isTitle(propertyValue)) {
return false;
}
break;
case "description":
if(!isDescription(propertyValue)) {
return false;
}
break;
case "examples":
if(!isExamples(propertyValue)) {
return false;
}
break;
case "deprecated":
if(!isDeprecated(propertyValue)) {
return false;
}
break;
case "types":
if(!isTypes(propertyValue)) {
return false;
}
break;
case "reference":
if(!isReference(propertyValue)) {
return false;
}
break;
case "oneOf":
if(!isOneOf(propertyValue)) {
return false;
}
break;
case "anyOf":
if(!isAnyOf(propertyValue)) {
return false;
}
break;
case "allOf":
if(!isAllOf(propertyValue)) {
return false;
}
break;
case "if":
if(!isIf(propertyValue)) {
return false;
}
break;
case "then":
if(!isThen(propertyValue)) {
return false;
}
break;
case "else":
if(!isElse(propertyValue)) {
return false;
}
break;
case "not":
if(!isNot(propertyValue)) {
return false;
}
break;
case "dependentSchemas":
if(!isDependentSchemas(propertyValue)) {
return false;
}
break;
case "objectProperties":
if(!isObjectProperties(propertyValue)) {
return false;
}
break;
case "mapProperties":
if(!isMapProperties(propertyValue)) {
return false;
}
break;
case "patternProperties":
if(!isPatternProperties(propertyValue)) {
return false;
}
break;
case "propertyNames":
if(!isPropertyNames(propertyValue)) {
return false;
}
break;
case "tupleItems":
if(!isTupleItems(propertyValue)) {
return false;
}
break;
case "arrayItems":
if(!isArrayItems(propertyValue)) {
return false;
}
break;
case "contains":
if(!isContains(propertyValue)) {
return false;
}
break;
case "options":
if(!isOptions(propertyValue)) {
return false;
}
break;
case "minimumInclusive":
if(!isMinimumInclusive(propertyValue)) {
return false;
}
break;
case "minimumExclusive":
if(!isMinimumExclusive(propertyValue)) {
return false;
}
break;
case "maximumInclusive":
if(!isMaximumInclusive(propertyValue)) {
return false;
}
break;
case "maximumExclusive":
if(!isMaximumExclusive(propertyValue)) {
return false;
}
break;
case "multipleOf":
if(!isMultipleOf(propertyValue)) {
return false;
}
break;
case "minimumLength":
if(!isMinimumLength(propertyValue)) {
return false;
}
break;
case "maximumLength":
if(!isMaximumLength(propertyValue)) {
return false;
}
break;
case "valuePattern":
if(!isValuePattern(propertyValue)) {
return false;
}
break;
case "valueFormat":
if(!isValueFormat(propertyValue)) {
return false;
}
break;
case "minimumItems":
if(!isMinimumItems(propertyValue)) {
return false;
}
break;
case "maximumItems":
if(!isMaximumItems(propertyValue)) {
return false;
}
break;
case "uniqueItems":
if(!isUniqueItems(propertyValue)) {
return false;
}
break;
case "required":
if(!isRequired(propertyValue)) {
return false;
}
break;
case "minimumProperties":
if(!isMinimumProperties(propertyValue)) {
return false;
}
break;
case "maximumProperties":
if(!isMaximumProperties(propertyValue)) {
return false;
}
break;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node-reference}
*/
export function isNodeReference(value: unknown): value is types.NodeReference {
return ((typeof value === "string"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/integer-value}
*/
export function isIntegerValue(value: unknown): value is types.IntegerValue {
return ((typeof value === "number") &&
(!isNaN(value)) &&
(value % 1 === 0));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/number-value}
*/
export function isNumberValue(value: unknown): value is types.NumberValue {
return ((typeof value === "number") &&
(!isNaN(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/boolean-value}
*/
export function isBooleanValue(value: unknown): value is types.BooleanValue {
return ((typeof value === "boolean"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/string-value}
*/
export function isStringValue(value: unknown): value is types.StringValue {
return ((typeof value === "string"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/non-empty-string-value}
*/
export function isNonEmptyStringValue(value: unknown): value is types.NonEmptyStringValue {
return ((typeof value === "string"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/amount}
*/
export function isAmount(value: unknown): value is types.Amount {
return ((typeof value === "number") &&
(!isNaN(value)) &&
(value % 1 === 0));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/properties/$schema}
*/
export function isSchema(value: unknown): value is types.Schema {
return ((typeof value === "string") &&
(value === "https://schema.JsonSchema42.org/jns42-intermediate/schema.json"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/properties/schemas}
*/
export function isSchemas(value: unknown): value is types.Schemas {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
if(!(typeof propertyName === "string")) {
return false;
}
if(!isSchemasAdditionalProperties(propertyValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/title}
*/
export function isTitle(value: unknown): value is types.Title {
return ((isNonEmptyStringValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/description}
*/
export function isDescription(value: unknown): value is types.Description {
return ((isNonEmptyStringValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/examples}
*/
export function isExamples(value: unknown): value is types.Examples {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isExamplesItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/deprecated}
*/
export function isDeprecated(value: unknown): value is types.Deprecated {
return ((isBooleanValue(value)));
}
/**
* @description What types does this schema describe<br />
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/types}
*/
export function isTypes(value: unknown): value is types.Types {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isTypesItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/reference}
*/
export function isReference(value: unknown): value is types.Reference {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/oneOf}
*/
export function isOneOf(value: unknown): value is types.OneOf {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOneOfItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/anyOf}
*/
export function isAnyOf(value: unknown): value is types.AnyOf {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAnyOfItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/allOf}
*/
export function isAllOf(value: unknown): value is types.AllOf {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isAllOfItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/if}
*/
export function isIf(value: unknown): value is types.If {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/then}
*/
export function isThen(value: unknown): value is types.Then {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/else}
*/
export function isElse(value: unknown): value is types.Else {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/not}
*/
export function isNot(value: unknown): value is types.Not {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/dependentSchemas}
*/
export function isDependentSchemas(value: unknown): value is types.DependentSchemas {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
if(!(typeof propertyName === "string")) {
return false;
}
if(!isDependentSchemasAdditionalProperties(propertyValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/objectProperties}
*/
export function isObjectProperties(value: unknown): value is types.ObjectProperties {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
if(!(typeof propertyName === "string")) {
return false;
}
if(!isObjectPropertiesAdditionalProperties(propertyValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/mapProperties}
*/
export function isMapProperties(value: unknown): value is types.MapProperties {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/patternProperties}
*/
export function isPatternProperties(value: unknown): value is types.PatternProperties {
return ((value !== null) &&
(typeof value === "object") &&
(!Array.isArray(value)) &&
(
(()=>{
for(const propertyName in value) {
const propertyValue = value[propertyName as keyof typeof value];
if(propertyValue === undefined) {
continue;
}
if(!(typeof propertyName === "string")) {
return false;
}
if(!isPatternPropertiesAdditionalProperties(propertyValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/propertyNames}
*/
export function isPropertyNames(value: unknown): value is types.PropertyNames {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/tupleItems}
*/
export function isTupleItems(value: unknown): value is types.TupleItems {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isTupleItemsItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/arrayItems}
*/
export function isArrayItems(value: unknown): value is types.ArrayItems {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/contains}
*/
export function isContains(value: unknown): value is types.Contains {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/options}
*/
export function isOptions(value: unknown): value is types.Options {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isOptionsItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/minimumInclusive}
*/
export function isMinimumInclusive(value: unknown): value is types.MinimumInclusive {
return ((isNumberValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/minimumExclusive}
*/
export function isMinimumExclusive(value: unknown): value is types.MinimumExclusive {
return ((isNumberValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/maximumInclusive}
*/
export function isMaximumInclusive(value: unknown): value is types.MaximumInclusive {
return ((isNumberValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/maximumExclusive}
*/
export function isMaximumExclusive(value: unknown): value is types.MaximumExclusive {
return ((isNumberValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/multipleOf}
*/
export function isMultipleOf(value: unknown): value is types.MultipleOf {
return ((isNumberValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/minimumLength}
*/
export function isMinimumLength(value: unknown): value is types.MinimumLength {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/maximumLength}
*/
export function isMaximumLength(value: unknown): value is types.MaximumLength {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/valuePattern}
*/
export function isValuePattern(value: unknown): value is types.ValuePattern {
return ((isNonEmptyStringValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/valueFormat}
*/
export function isValueFormat(value: unknown): value is types.ValueFormat {
return ((isNonEmptyStringValue(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/minimumItems}
*/
export function isMinimumItems(value: unknown): value is types.MinimumItems {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/maximumItems}
*/
export function isMaximumItems(value: unknown): value is types.MaximumItems {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/uniqueItems}
*/
export function isUniqueItems(value: unknown): value is types.UniqueItems {
return ((typeof value === "boolean"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/required}
*/
export function isRequired(value: unknown): value is types.Required {
return ((Array.isArray(value)) &&
(
(()=>{
for(let elementIndex = 0; elementIndex < value.length; elementIndex ++) {
const elementValue = value[elementIndex];
if(!isRequiredItems(elementValue)) {
return false;
}
}
return true;
})()
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/minimumProperties}
*/
export function isMinimumProperties(value: unknown): value is types.MinimumProperties {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/maximumProperties}
*/
export function isMaximumProperties(value: unknown): value is types.MaximumProperties {
return ((isAmount(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/properties/schemas/additionalProperties}
*/
export function isSchemasAdditionalProperties(value: unknown): value is types.SchemasAdditionalProperties {
return ((isNode(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/examples/items}
*/
export function isExamplesItems(value: unknown): value is types.ExamplesItems {
return ((
// any
true
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/types/items}
*/
export function isTypesItems(value: unknown): value is types.TypesItems {
return ((typeof value === "string") &&
(value === "never" ||
value === "any" ||
value === "null" ||
value === "boolean" ||
value === "integer" ||
value === "number" ||
value === "string" ||
value === "array" ||
value === "map"));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/oneOf/items}
*/
export function isOneOfItems(value: unknown): value is types.OneOfItems {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/anyOf/items}
*/
export function isAnyOfItems(value: unknown): value is types.AnyOfItems {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/allOf/items}
*/
export function isAllOfItems(value: unknown): value is types.AllOfItems {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/dependentSchemas/additionalProperties}
*/
export function isDependentSchemasAdditionalProperties(value: unknown): value is types.DependentSchemasAdditionalProperties {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/objectProperties/additionalProperties}
*/
export function isObjectPropertiesAdditionalProperties(value: unknown): value is types.ObjectPropertiesAdditionalProperties {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/patternProperties/additionalProperties}
*/
export function isPatternPropertiesAdditionalProperties(value: unknown): value is types.PatternPropertiesAdditionalProperties {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/tupleItems/items}
*/
export function isTupleItemsItems(value: unknown): value is types.TupleItemsItems {
return ((isNodeReference(value)));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/options/items}
*/
export function isOptionsItems(value: unknown): value is types.OptionsItems {
return ((
// any
true
));
}
/**
* @see {@link https://schema.jsonschema42.org/jns42-intermediate/schema.json#/$defs/node/properties/required/items}
*/
export function isRequiredItems(value: unknown): value is types.RequiredItems {
return ((isStringValue(value)));
}
